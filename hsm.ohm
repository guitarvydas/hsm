hsm {
  Machine = "machine" name MachineDefinition
  MachineDefinition = "{" DefaultState (State | Machine)+ "}"
  DefaultState = "default" ":" name
  State = "state" name "{" EntryCode? Handler* Contains? ExitCode? "}"
  EntryCode = "enter" ":" verbatim
  Contains = "contains" name
  ExitCode = "exit" ":" verbatim
  Handler = "on" name ":" "{" HandlerStatement+ "}"
  HandlerStatement =
    | verbatim    -- verbatim
    | "next" name -- next

  name = 
    | baseName
    | compoundName
  baseName = nameFirst nameRest*
  nameFirst = letter
  nameRest = alnum | "_"
  compoundName = "❲" (~"❳" any)+ "❳"
  verbatim = "⟨" (~"⟩" any)+ "⟩"
}